(this["webpackJsonpalgo-visual"]=this["webpackJsonpalgo-visual"]||[]).push([[0],{100:function(e,t,n){},101:function(e,t,n){},110:function(e,t,n){},111:function(e,t,n){},112:function(e,t,n){},383:function(e,t,n){},384:function(e,t,n){},385:function(e,t,n){},386:function(e,t,n){},388:function(e,t,n){"use strict";n.r(t);var i=n(2),a=n.n(i),s=n(81),r=n.n(s),o=n(7),l=n(11),c=n(9),d=n(10),u=(n(100),n(15)),h=(n(101),n(13)),b=n(0),p=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){var a;return Object(o.a)(this,n),(a=t.call(this,e)).dropdownMenu=Object(i.createRef)(),a.dropdownCaret=Object(i.createRef)(),a.state={showAlgosMenu:!1},a.showAlgosMenu=a.showAlgosMenu.bind(Object(u.a)(a)),a.closeAlgosMenu=a.closeAlgosMenu.bind(Object(u.a)(a)),a.displayAlgosMenu=a.displayAlgosMenu.bind(Object(u.a)(a)),a}return Object(l.a)(n,[{key:"showAlgosMenu",value:function(e){var t=this;this.state.showAlgosMenu||(this.setState({showAlgosMenu:!0},(function(){return t.displayAlgosMenu()})),e.stopPropagation(),document.addEventListener("click",this.closeAlgosMenu))}},{key:"closeAlgosMenu",value:function(){var e=this;this.setState({showAlgosMenu:!1},(function(){return e.displayAlgosMenu()})),document.removeEventListener("click",this.closeAlgosMenu)}},{key:"displayAlgosMenu",value:function(){this.state.showAlgosMenu?(this.dropdownMenu.current.style.display="block",this.dropdownCaret.current.style.transform="rotate(180deg)",this.dropdownCaret.current.style.transition="all 300ms linear"):(this.dropdownMenu.current.style.display="none",this.dropdownCaret.current.style.transform="rotate(0deg)",this.dropdownCaret.current.style.transition="all 300ms linear")}},{key:"render",value:function(){return Object(b.jsxs)("header",{id:"header",children:[Object(b.jsx)("div",{id:"logo-wrapper",children:Object(b.jsx)(h.b,{to:"/AlgoVisual",children:Object(b.jsx)("p",{id:"name",children:" AlgoVisual "})})}),Object(b.jsx)("div",{id:"nav-wrapper",children:Object(b.jsx)("nav",{id:"nav-bar",children:Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:Object(b.jsxs)("div",{className:"nav-link",children:[Object(b.jsxs)("div",{className:"nav-option",onClick:this.showAlgosMenu,children:[Object(b.jsx)("p",{className:"noselect",children:" Algorithms "}),Object(b.jsx)("i",{className:"fas fa-caret-down",ref:this.dropdownCaret,children:" "})]}),Object(b.jsx)("div",{id:"dropdown",ref:this.dropdownMenu,children:Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:Object(b.jsx)(h.b,{to:"/AlgoVisual/sorting",className:"nav-link",children:Object(b.jsx)("div",{className:"algos-option",children:Object(b.jsx)("p",{children:" Sorting "})})})}),Object(b.jsx)("li",{children:Object(b.jsx)(h.b,{to:"/AlgoVisual/pathfinding",className:"nav-link",children:Object(b.jsx)("div",{className:"algos-option",children:Object(b.jsx)("p",{children:" Pathfinding "})})})}),Object(b.jsx)("li",{children:Object(b.jsx)(h.b,{to:"/AlgoVisual/datastructures",className:"nav-link",children:Object(b.jsx)("div",{className:"algos-option",children:Object(b.jsx)("p",{children:" Data Structures "})})})})]})})]})}),Object(b.jsx)("li",{children:Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation",className:"nav-link",children:Object(b.jsx)("div",{className:"nav-option",children:Object(b.jsx)("p",{children:" Documentation "})})})}),Object(b.jsx)("li",{children:Object(b.jsx)(h.b,{to:"/AlgoVisual/about",className:"nav-link",children:Object(b.jsx)("div",{className:"nav-option",children:Object(b.jsx)("p",{children:" About "})})})})]})})})]})}}]),n}(a.a.Component),m=(n(110),function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"render",value:function(){return Object(b.jsxs)("footer",{id:"footer",children:[Object(b.jsx)("p",{id:"footer-header",children:" Connect with me through these platforms "}),Object(b.jsx)("div",{id:"contact-wrapper",children:Object(b.jsxs)("ul",{children:[Object(b.jsx)("li",{children:Object(b.jsxs)("a",{href:"https://github.com/eduardo-vidals",target:"_blank",className:"social-link",children:[Object(b.jsx)("i",{className:"fab fa-github",children:" "}),Object(b.jsx)("span",{className:"social-text",children:" GitHub "})]})}),Object(b.jsx)("li",{children:Object(b.jsxs)("a",{href:"https://www.linkedin.com/in/eduardo-vidals",target:"blank",className:"social-link",children:[Object(b.jsx)("i",{className:"fab fa-linkedin-in",children:" "}),Object(b.jsx)("span",{className:"social-text",children:" LinkedIn "})]})}),Object(b.jsx)("li",{children:Object(b.jsxs)("a",{href:"https://www.instagram.com/eddy_the_professionalpenguin",target:"blank",className:"social-link",children:[Object(b.jsx)("i",{className:"fab fa-instagram",children:" "}),Object(b.jsx)("span",{className:"social-text",children:" Instagram "})]})}),Object(b.jsx)("li",{children:Object(b.jsxs)("a",{className:"social-link",children:[Object(b.jsx)("i",{className:"fab fa-discord",children:" "}),Object(b.jsx)("span",{className:"social-text",children:" Discord "})]})}),Object(b.jsx)("li",{children:Object(b.jsxs)("a",{className:"social-link",children:[Object(b.jsx)("i",{className:"fas fa-envelope",children:" "}),Object(b.jsx)("span",{className:"social-text",children:" Email "})]})})]})})]})}}]),n}(a.a.Component)),j=(n(111),function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"render",value:function(){return Object(b.jsxs)("div",{id:"home-wrapper",children:[Object(b.jsx)("h1",{id:"home-header-text",children:" Visualizing made easy. "}),Object(b.jsx)("p",{id:"home-text",children:"This is my first big project, please feel free to explore the beautiful visualization of algorithms and data structures by clicking one of the buttons below."}),Object(b.jsxs)("div",{id:"buttons-menu",children:[Object(b.jsx)(h.b,{to:"/AlgoVisual/sorting",children:Object(b.jsx)("div",{className:"home-section",children:" Sorting Algorithms "})}),Object(b.jsx)(h.b,{to:"/AlgoVisual/pathfinding",children:Object(b.jsx)("div",{className:"home-section",children:" Pathfinding Algorithms "})}),Object(b.jsx)(h.b,{to:"/AlgoVisual/datastructures",children:Object(b.jsx)("div",{className:"home-section",children:" Data Structures "})})]})]})}}]),n}(a.a.Component)),g=(n(112),n(14)),f=n(29),v=n(12),O=n(27),x=n(405),y=n(26),w=n(28),k=n(25),S=["inline","className","children"],A=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{className:"documentation-wrapper",children:Object(b.jsx)("div",{className:"markdown-wrapper",children:Object(b.jsx)("div",{className:"markdown",children:Object(b.jsx)(O.a,{children:"\n# Introduction \nThis part of the page will go over the implementations of the algorithms and data structures that are implemented throughout the site.\n\n- Before starting, this documentation page assumes that you have a good understanding of the Java programming language. \n- An explanation of the data structures and algorithms will be provided in their respective sections. \n \n## Inspiration & Credits\n- This project was largely inspired by Cl\xe9ment Mihailescu's sorting and pathfinding visualizer.\n- The algorithm and data structure implementations are inspired by the Coursera algorithm courses offered by Princeton University under Robert Sedgewick & Kevin Wayne. \n- Thanks to freeCodeCamp for the wonderful projects offered within their course which helped me build a solid foundation of the React framework. \n\n## Respective Links\n- [Cl\xe9ment Mihailescu's Sorting Visualizer](https://github.com/clementmihailescu/Sorting-Visualizer)\n- [Cl\xe9ment Mihailescu's Pathfinding Visualizer](https://github.com/clementmihailescu/Pathfinding-Visualizer)\n- [Algorithms Part I by Robert Sedgewick & Kevin Wayne](https://www.coursera.org/learn/algorithms-part1)\n- [Algorithms Part II by Robert Sedgewick & Kevin Wayne](https://www.coursera.org/learn/algorithms-part2)\n- [Front End Development Libraries by freeCodeCamp](https://www.freecodecamp.org/learn/front-end-development-libraries)\n",remarkPlugins:[[w.a],[k.a]],components:{a:function(e){var t=Object.assign({},e);return Object(b.jsx)("a",Object(v.a)({target:"_blank"},t))},code:function(e){var t=e.inline,n=e.className,i=e.children,a=Object(f.a)(e,S),s=/language-(\w+)/.exec(n||"");return!t&&s?Object(b.jsx)(x.a,{children:String(i).replace(/\n$/,""),customStyle:{padding:"20px 30px 20px 0px"},style:y.a,showLineNumbers:!0,language:s[1],PreTag:"div"}):Object(b.jsx)("code",Object(v.a)(Object(v.a)({className:n},a),{},{children:i}))}}})})})})}}]),n}(a.a.Component),N=(n(383),["inline","className","children"]),L=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{className:"documentation-wrapper",children:Object(b.jsx)("div",{className:"markdown-wrapper",children:Object(b.jsxs)("div",{className:"markdown",children:[Object(b.jsx)(O.a,{children:"\n# Data Structures\nThis part of the page will go over many relevant data strucures that are implemented throughout the site. \n",remarkPlugins:[[w.a],[k.a]],components:{a:function(e){var t=Object.assign({},e);return Object(b.jsx)("a",Object(v.a)({target:"_blank"},t))},code:function(e){var t=e.inline,n=e.className,i=e.children,a=Object(f.a)(e,N),s=/language-(\w+)/.exec(n||"");return!t&&s?Object(b.jsx)(x.a,{children:String(i).replace(/\n$/,""),customStyle:{padding:"20px 30px 20px 0px"},style:y.a,showLineNumbers:!0,language:s[1],PreTag:"div"}):Object(b.jsx)("code",Object(v.a)(Object(v.a)({className:n},a),{},{children:i}))}}}),Object(b.jsxs)("div",{className:"sections-wrapper",children:[Object(b.jsx)("p",{className:"sections-header",children:" Content that will be covered: "}),Object(b.jsx)("div",{className:"sections",children:Object(b.jsxs)("ul",{children:[Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures/array-list",children:Object(b.jsx)("li",{children:" 1. ArrayList"})}),Object(b.jsx)("hr",{className:"section-break"}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures/linked-list",children:Object(b.jsx)("li",{children:" 2. LinkedList"})}),Object(b.jsx)("hr",{className:"section-break"}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures/heaps",children:Object(b.jsx)("li",{children:" 3. Heaps"})}),Object(b.jsx)("hr",{className:"section-break"}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures/binary-search-trees",children:Object(b.jsx)("li",{children:" 4. Binary Search Trees"})}),Object(b.jsx)("hr",{className:"section-break"}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures/analysis-of-data-structures",children:Object(b.jsx)("li",{children:" 5. Analysis of Data Structures "})})]})})]})]})})})}}]),n}(a.a.Component),C=(n(384),function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{})}}]),n}(a.a.Component)),E=(n(385),function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{})}}]),n}(a.a.Component)),M=["inline","className","children"],I=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{className:"documentation-wrapper",children:Object(b.jsx)("div",{className:"markdown-wrapper",children:Object(b.jsx)("div",{className:"markdown",children:Object(b.jsx)(O.a,{children:"\n# ArrayList in Java\nThis section will go over a simple implementation of ArrayList.\n\n## Arrays\nAs a reminder, keep in mind that arrays have a limited size in the amount of data they can hold. However, in an ArrayList we are able to manipulate arrays in such a way that allows us to insert and remove elements without having to worry about a limited size. \n\n## ArrayList Implementation\nKeeping the last section in mind, let's initialize our instance variables for our ArrayList. We will be using generics for our implementation to easily apply our ArrayList across all objects. \n\n```java\npublic class ArrayList<E> implements Iterable<E> {\n    private static final int INIT_CAPACITY = 8; // initial capacity of array\n    private E[] arr; \n    private int n; // size of array\n    \n    public ArrayList(){\n        arr = (E[]) new Object[INIT_CAPACITY]; // generic array \n        n = 0;\n    }\n}\n```\n\n### Relevant Methods\nFirst, let's implement the straightforward methods of a list.\n```java\npublic boolean isEmpty() {\n    return n == 0;\n}\n\npublic int size() {\n    return n;\n}\n```\n\n### Helper Method (Resizing Array)\nLet's now implement our first relevant helper method for an ArrayList. We will need a resize method that will use an array with a new capacity and copies all values from the old array into this new array with an updated capacity. \n\n```java\nprivate void resize(int capacity) {\n    E[] copy = (E[]) new Object[capacity];\n    for (int i = 0; i < n; i++){\n        copy[i]= arr[i];\n    }\n    arr = copy;\n}\n```\n\n### Instance Methods\nWith the help of the previous helper method, we are now able to implement our add and remove methods. \n\n```java\npublic void add(E item){\n    // resize once we reach max capacity\n    if (n == arr.length) {\n        // resizing by 2x ensures we don't resize too frequently and don't allocate too much memory\n        resize(arr.length * 2);\n    }\n    arr[n++] = item;\n}\n\npublic void remove(int index){\n    int numMoved = n - index - i; // numOfNumbers that need to be moved\n    System.arraycopy(arr, index + 1, arr, index, numMoved); // shifts elements to left by 1\n    arr[n--] = null; // decrement size and ensure last arr value is null \n    \n    // resize to ensure you don't allocate too much memory when you have a few amount of elements\n    if (n > 0 && n == arr.length / 4){\n        resize(arr.length / 2);\n    }\n}\n```\n### Iterator\nAs a reminder, remember to implement the Iterator interface and implement the following methods: \n- hasNext()\n    - returns true or false depending on whether there is a next element\n- next()\n    - returns the next element in the iterator\n- remove()\n    - allows you to remove elements while traversing\n\nWe will implement an iterator to allow users to remove elements while the list is being traversed. Iterators also allow you to use the for-each syntax for easier traversal. \n\n```java\npublic Iterator<E> iterator() {\n    return new ListIterator();\n}\n\nprivate class ListIterator implements Iterator<E> {\n    private int i; // current index\n    \n    @Override\n    public boolean hasNext(){\n        return i < n;\n    }\n    \n    @Override\n    public E next(){\n        if (!hasNext()){\n            throw new NoSuchElementException();\n        }\n        return copy[i++];\n    }\n    \n    @Override \n    public void remove() {\n        if (i == 0) {\n            throw new IllegalStateException();\n        }\n        ArrayList.this.remove(--i);\n    }\n}\n```\n\n\n## Visualizer\n...And that's it! Our implementation of ArrayList should be working just fine. Remember, there is also a simple visualization tool of how the array operates in an ArrayList. Click the button below to check out the visualizer!\n",remarkPlugins:[[w.a],[k.a]],components:{a:function(e){var t=Object.assign({},e);return Object(b.jsx)("a",Object(v.a)({target:"_blank"},t))},code:function(e){var t=e.inline,n=e.className,i=e.children,a=Object(f.a)(e,M),s=/language-(\w+)/.exec(n||"");return!t&&s?Object(b.jsx)(x.a,{children:String(i).replace(/\n$/,""),customStyle:{padding:"20px 30px 20px 0px"},style:y.a,showLineNumbers:!0,language:s[1],PreTag:"div"}):Object(b.jsx)("code",Object(v.a)(Object(v.a)({className:n},a),{},{children:i}))}}})})})})}}]),n}(a.a.Component),T=["inline","className","children"],z=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"componentDidMount",value:function(){this.props.section.current.style.borderLeft="10px white solid",this.props.section.current.style.backgroundColor="#29354b"}},{key:"componentWillUnmount",value:function(){null!==this.props.section.current&&(this.props.section.current.style.borderLeft="none",this.props.section.current.style.backgroundColor="inherit")}},{key:"render",value:function(){return Object(b.jsx)("div",{className:"documentation-wrapper",children:Object(b.jsx)("div",{className:"markdown-wrapper",children:Object(b.jsx)("div",{className:"markdown",children:Object(b.jsx)(O.a,{children:"\n# LinkedList in Java\nThis section will go over a simple implementation of ArrayList.\n\n## Objects & Classes\nThere is sometimes confusion when linked lists are introduced due to not understanding the concept of objects and classes. Therefore, it is important that you understand the idea of having a **inner** class within a class. The idea of a linked list is that an inner class can essentially act as a *pointer* that keeps track of **previous** and **next** nodes. This idea is explained in the image below. \n\n[TO DO IMAGE]\n\n## LinkedList Implementation\nKeeping the logic of the last section in mind, we can now initialize the barebones logic of a LinkedList. We will be using generics for our implementation to easily apply our LinkedList across all objects.\n\n```java\npublic class LinkedList<E> implements Iterable<E> {\n    private Node head; // first element in list\n    private Node tail; // last element in list\n    private int n; // size of arr\n    \n    private class Node {\n        Node next; // represents the node next to this current node\n        Node prev; // represents the node prev to this current node\n        E data; // represents the data within the current node\n        \n        public Node(E data){\n            this.data = data;\n        }\n    }     \n}\n```\n\nThe code above is the barebones logic of a **doubly-linked list.** It will have **two** pointers, one pointer to the previous element and one pointer to the next element. A **singly-linked list** only has **one** pointer that points to the next element. We will be implementing a doubly-linked list as it is more efficient and it'll be easier to understand a singly-linked list after implementing a doubly-linked list.\n\n### Relevant Methods\nFirst, let's implement the straightforward methods of a list.\n```java\npublic int size(){ \n    return n;\n}\n\npublic boolean isEmpty(){\n    return n == 0;\n}\n```\n\n\n### Stacks (LIFO)\nLet's introduce the concept of a **stack** as it serves as an important concept in computer science. A **stack** data structure works as **Last In, First Out (LIFO).** An analogy for this data structure is to imagine a pile of pancakes. Which pancake is the first one to be removed? The last pancake that was put into the pile will most likely result in it being the first one removed. This concept is easily explained by the image below.\n\n[TO DO IMAGE]\n\nWe can now implement the relevant methods of a LinkedList that serve the purpose of a **stack** data structure. We will name the methods **addLast()** and **removeLast()**, but these methods can also be represented as **push()** and **pop().**\n\n```java\npublic void addLast(E data){\n    // save the \"oldTail\" in a temp variable (as this will become the old tail)\n    Node oldTail = tail;\n    // initialize new tail with new data, prev Node will always be the oldTail\n    tail = new Node(data);\n    tail.prev = oldTail;\n    // when we first add into our list, the head will be equal to the tail\n    if(isEmpty()){\n        head = tail;\n    } \n    // after that, the next value of the old tail will be the current tail\n    else {\n        oldTail.next = tail;\n    }\n    n++;\n}\n\npublic E removeLast(){\n    // throw an exception if element is being removed when list is empty\n    if (isEmpty()) {\n        throw new NoSuchElementException();\n    }  \n    // make a variable for the old tail so we can return the data when the element is removed\n    Node oldTail = tail;\n    // make new tail be equal to the prev node of the tail\n    // then make the next value null for garbage collection\n    if (size() > 1){\n        tail = tail.prev;\n        tail.next = null;  \n    }\n    // this essentially means the list is empty so make both values null\n    else {\n        head = null;\n        tail = null;\n    }\n    n--;\n    return oldTail.data;\n}\n```\n\n### Queues (LIFO)\nLet's introduce the concept of a **queue** as it serves as an important concept in computer science. A **queue** data structure works as **First In, First Out (FIFO).** An analogy for a queue is to imagine being the first person in line for Subway, eventually, you will be the first one out of line and will go on your day to enjoy your subway! This concept is easily explained by the image below. \n\n[TO DO IMAGE]\n\nWe can now implement the relevant methods of a LinkedList that serve the purpose of a **queue** data structure. We will name the methods **addFirst()** and **removeFirst()**, but these methods can also be represented as **enqueue()** and **dequeue().**\n\n```java\npublic void addFirst(E data){\n    // save the \"oldHead\" in a temp variable (as this will become the old head)\n    Node oldHead = head;\n    // initialize new head with new data, next Node will always be the oldHead\n    head = new Node(data);\n    head.next = oldHead;\n    // when we first add into our list, the tail will be equal to the head\n    if (isEmpty()){\n        tail = head;\n    } \n    // after that, the prev value of the old head will be the current head\n    else {\n        oldHead.prev = head;\n    }\n    n++;\n}\n\npublic E removeFirst(){\n    // throw an exception if element is being removed when list is empty\n    if (isEmpty()) {\n        throw new NoSuchElementException();\n    } \n    // make a variable for the old head so we can return the data when the element is removed\n    Node oldHead = head;\n    // make new head be equal to the next node of the head\n    // then make the prev value null for garbage collection\n    if (size() > 1){\n        head = head.next;\n        head.prev = null;\n    } \n    // this essentially means the list is empty so make both values null\n    else {\n        head = null;\n        tail = null;\n    }\n    n--;\n    return oldHead.data;\n}\n```\n\n### Deque\nA **deque** is simply a combination of a stack and queue data structure. As a result, our LinkedList can be defined as deque data structure as it supports the operations of a stack and queue data structure.\n\n### Iterator\nLet's now implement an iterator for our LinkedList.\n```java\npublic Iterator<E> iterator() {\n    return new LinkedIterator();\n}\n\nprivate class LinkedIterator implements Iterator<E> {\n    // keep track of current and lastAccessed nodes\n    private Node current = head;\n    private Node lastAccessed = null;\n\n    @Override\n    public boolean hasNext() {\n        return current != null;\n    }\n\n    @Override\n    public E next() {\n        if (!hasNext()) {\n            throw new NoSuchElementException();\n        }\n        // update lastAccessed node since it will be used to remove the lastAccessed element\n        // since the current element always updates when next() is called, thus it cannot\n        // be used within remove()\n        lastAccessed = current;\n        E data = current.data;\n        current = current.next;\n        return data;\n    }\n\n    @Override\n    public void remove() {\n        if (lastAccessed == null) {\n            throw new IllegalStateException();\n        }\n        if (lastAccessed == head) {\n            LinkedList.this.removeFirst();\n        } else if (lastAccessed == tail) {\n            LinkedList.this.removeLast();\n        } \n        // update the prev and next pointers of the lastAccessed node\n        // make the lastAccessed node null for garbage collection\n        else {\n            Node prev = lastAccessed.prev;\n            Node next = lastAccessed.next;\n            prev.next = next;\n            next.prev = prev;\n            n--;\n            lastAccessed = null;\n        }\n    }        \n}\n```\n\nThe **remove()** method might be a bit hard to understand so images will be provided for each case.\n\n[TO DO IMAGE] (removeFirst)\n[TO DO IMAGE] (removeLast)\n[TO DO IMAGE] (otherCases)\n\n## Visualizer\n...And that's it! Our implementation of a LinkedList should be working just fine. Remember, there is also a visualization tool of how the pointers operate in a LinkedList. Click the button below to check out the visualizer!\n",remarkPlugins:[[w.a],[k.a]],components:{a:function(e){var t=Object.assign({},e);return Object(b.jsx)("a",Object(v.a)({target:"_blank"},t))},code:function(e){var t=e.inline,n=e.className,i=e.children,a=Object(f.a)(e,T),s=/language-(\w+)/.exec(n||"");return!t&&s?Object(b.jsx)(x.a,{children:String(i).replace(/\n$/,""),customStyle:{padding:"20px 30px 20px 0px"},style:y.a,showLineNumbers:!0,language:s[1],PreTag:"div"}):Object(b.jsx)("code",Object(v.a)(Object(v.a)({className:n},a),{},{children:i}))}}})})})})}}]),n}(a.a.Component),V=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){var a;return Object(o.a)(this,n),(a=t.call(this,e)).gettingStartedSection=Object(i.createRef)(),a.dataStructuresSection=Object(i.createRef)(),a.sortingSection=Object(i.createRef)(),a.pathfindingSection=Object(i.createRef)(),a}return Object(l.a)(n,[{key:"render",value:function(){return Object(b.jsxs)("main",{className:"main-sidebar",children:[Object(b.jsx)("div",{className:"sidebar",children:Object(b.jsxs)("div",{id:"documentation-section",children:[Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation",className:"documentation-link",children:Object(b.jsx)("div",{className:"section",ref:this.gettingStartedSection,children:Object(b.jsx)("p",{children:" Introduction "})})}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/data-structures",className:"documentation-link",children:Object(b.jsx)("div",{className:"section",ref:this.dataStructuresSection,children:Object(b.jsx)("p",{children:" Data Structures "})})}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/sorting",className:"documentation-link",children:Object(b.jsx)("div",{className:"section",ref:this.sortingSection,children:Object(b.jsx)("p",{children:" Sorting "})})}),Object(b.jsx)(h.b,{to:"/AlgoVisual/documentation/pathfinding",className:"documentation-link",children:Object(b.jsx)("div",{className:"section",ref:this.pathfindingSection,children:Object(b.jsx)("p",{children:" Pathfinding "})})})]})}),Object(b.jsxs)(g.c,{children:["// main documentation page",Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation",children:Object(b.jsx)(A,{section:this.gettingStartedSection})}),"// data structures & sections",Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation/data-structures",children:Object(b.jsx)(L,{section:this.dataStructuresSection})}),Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation/data-structures/array-list",children:Object(b.jsx)(I,{section:this.dataStructuresSection})}),Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation/data-structures/linked-list",children:Object(b.jsx)(z,{section:this.dataStructuresSection})}),"// sorting & sections",Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation/sorting",children:Object(b.jsx)(C,{section:this.sortingSection})}),"// pathfinding & sections",Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/documentation/pathfinding",children:Object(b.jsx)(E,{section:this.pathfindingSection})})]})]})}}]),n}(a.a.Component),B=n(19);n(386);function D(e){var t=[];return function(e,t){for(var n=0;n<e.length-1;n++){for(var i=0,a=0;a<e.length-1-n;a++)t.push([a,a+1,!0]),t.push([a,a+1,!0]),e[a]>e[a+1]?(t.push([a,e[a+1],!1]),t.push([a+1,e[a],!1]),W(e,a,a+1)):i++;if(i===e.length-1)break}}(e,t),t}function W(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function R(e){var t=[],n=e.slice();return P(e,0,e.length-1,n,t),t}function P(e,t,n,i,a){if(t!==n){var s=Math.floor((t+n)/2);P(i,t,s,e,a),P(i,s+1,n,e,a),function(e,t,n,i,a,s){var r=t,o=t,l=n+1;for(;o<=n&&l<=i;)s.push([o,l,!0]),s.push([o,l,!0]),a[o]<=a[l]?(s.push([r,a[o],!1]),e[r++]=a[o++]):(s.push([r,a[l],!1]),e[r++]=a[l++]);for(;o<=n;)s.push([o,o,!0]),s.push([o,o,!0]),s.push([r,a[o],!1]),e[r++]=a[o++];for(;l<=i;)s.push([l,l,!0]),s.push([l,l,!0]),s.push([r,a[l],!1]),e[r++]=a[l++]}(e,t,s,n,i,a)}}function F(e){var t=[];return q(e,0,e.length-1,t),t}function q(e,t,n,i){if(t<n){var a=function(e,t,n,i){var a=e[(o=t,l=n,Math.floor(Math.random()*(l-o+1)+o))],s=t-1,r=n+1;var o,l;for(;;){do{s++,i.push([s,s,!0]),i.push([s,s,!0])}while(e[s]<a);do{r--,i.push([r,r,!0]),i.push([r,r,!0])}while(e[r]>a);if(s>=r)return r;i.push([s,e[r],!1]),i.push([r,e[s],!1]),H(e,s,r)}}(e,t,n,i);q(e,t,a,i),q(e,a+1,n,i)}}function H(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function _(e){var t=[];return function(e,t){for(var n=e.length,i=n/2;i>=1;i--)G(e,i,n,t);var a=n;for(;a>1;)J(e,1,a--,t),G(e,1,a,t)}(e,t),t}function G(e,t,n,i){for(;2*t<=n;){var a=2*t;if(a<n&&U(e,a,a+1)&&a++,!U(e,t,a))break;J(e,t,a,i),t=a}}function U(e,t,n){return e[t-1]<e[n-1]}function J(e,t,n,i){i.push([t-1,t-1,!0]),i.push([t-1,t-1,!0]),i.push([t-1,e[n-1],!1]),i.push([n-1,n-1,!0]),i.push([n-1,n-1,!0]),i.push([n-1,e[t-1],!1]);var a=e[t-1];e[t-1]=e[n-1],e[n-1]=a}function K(e){var t=[];return function(e,t){for(var n=0;n<e.length;n++){for(var i=e[n],a=n,s=n;s<e.length;s++)t.push([s,s,!0]),t.push([s,s,!0]),i>e[s]&&(i=e[s],a=s);t.push([n,e[a],!1]),t.push([a,e[n],!1]),$(e,n,a)}}(e,t),t}function $(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}var Q=n(404),Y="#98d6e8",X=["Bubble Sort","Insertion Sort","Selection Sort","Merge Sort","Quick Sort","Heap Sort"],Z=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){var a;return Object(o.a)(this,n),(a=t.call(this,e)).dropdownSelection=Object(i.createRef)(),a.dropdownCaret=Object(i.createRef)(),a.runButton=Object(i.createRef)(),a.resetButton=Object(i.createRef)(),a.timer=void 0,a.timer=null,a.state={arr:[],numberOfBars:100,sortingSpeed:1,sortingAlgorithm:"Bubble Sort",showSortingOptions:!1,optionsDisabled:!1,animationLength:0,sliderStyle:{color:"#33435d",":hover":{boxShadow:0},"& .MuiSlider-thumb":{bgcolor:"#85a4d9","&:focus, &:hover, &.Mui-active, &.Mui-focusVisible":{boxShadow:"0"}},"& .MuiSlider-valueLabel":{display:"none"}},keepTimeout:!0},a.resetArray=a.resetArray.bind(Object(u.a)(a)),a.changeWidthBasedOnSize=a.changeWidthBasedOnSize.bind(Object(u.a)(a)),a.numberOfBars=a.numberOfBars.bind(Object(u.a)(a)),a.sliderSpeed=a.sliderSpeed.bind(Object(u.a)(a)),a.runSortingAlgorithm=a.runSortingAlgorithm.bind(Object(u.a)(a)),a.buttonEnter=a.buttonEnter.bind(Object(u.a)(a)),a.buttonLeave=a.buttonLeave.bind(Object(u.a)(a)),a.showSortingAlgorithms=a.showSortingAlgorithms.bind(Object(u.a)(a)),a.closeSortingAlgorithms=a.closeSortingAlgorithms.bind(Object(u.a)(a)),a.displaySortingAlgorithms=a.displaySortingAlgorithms.bind(Object(u.a)(a)),a.changeAlgorithm=a.changeAlgorithm.bind(Object(u.a)(a)),a}return Object(l.a)(n,[{key:"componentDidMount",value:function(){var e=this;this.resetArray(),window.addEventListener("resize",(function(){e.resetArray()}),!0)}},{key:"resetArray",value:function(){var e,t,n=this;if(!this.state.optionsDisabled){for(var i=document.getElementById("app-wrapper").clientHeight-document.getElementById("header").clientHeight-document.getElementById("footer").clientHeight-100,a=[],s=0;s<this.state.numberOfBars;s++)a.push((e=5,t=i,Math.floor(Math.random()*(t-e+1)+e)));this.setState({arr:a},(function(){return n.changeWidthBasedOnSize(n.state.arr)}))}}},{key:"changeWidthBasedOnSize",value:function(e){e.length<=20?this.changeBarsWidth(60):e.length<=40?this.changeBarsWidth(35):e.length<=100?this.changeBarsWidth(10):e.length<=150?this.changeBarsWidth(8):e.length<=200?this.changeBarsWidth(5):this.changeBarsWidth(3)}},{key:"changeBarsWidth",value:function(e){for(var t=document.getElementsByClassName("array-bar"),n=0;n<t.length;n++){t[n].style.width=e+"px"}}},{key:"numberOfBars",value:function(e,t){var n=this;this.setState({numberOfBars:t},(function(){n.state.numberOfBars>10&&n.state.numberOfBars<250&&n.resetArray()}))}},{key:"sliderSpeed",value:function(e,t){this.setState({sortingSpeed:t})}},{key:"buttonEnter",value:function(e){this.state.optionsDisabled||(e.currentTarget.style.color="#98d6e8")}},{key:"buttonLeave",value:function(e){this.state.optionsDisabled||(e.currentTarget.style.color="#fff")}},{key:"showSortingAlgorithms",value:function(e){var t=this;this.state.showSortingOptions||(this.setState({showSortingOptions:!0},(function(){return t.displaySortingAlgorithms()})),e.stopPropagation(),document.addEventListener("click",this.closeSortingAlgorithms))}},{key:"closeSortingAlgorithms",value:function(){var e=this;this.setState({showSortingOptions:!1},(function(){return e.displaySortingAlgorithms()})),document.removeEventListener("click",this.closeSortingAlgorithms)}},{key:"displaySortingAlgorithms",value:function(){this.state.showSortingOptions?(this.dropdownSelection.current.style.display="block",this.dropdownCaret.current.style.transform="rotate(180deg)",this.dropdownCaret.current.style.transition="all 250ms linear"):(this.dropdownSelection.current.style.display="none",this.dropdownCaret.current.style.transform="rotate(0deg)",this.dropdownCaret.current.style.transition="all 250ms linear")}},{key:"changeAlgorithm",value:function(e){this.setState({sortingAlgorithm:e})}},{key:"bubbleSort",value:function(){var e=D(this.state.arr);this.sort(e,2)}},{key:"insertionSort",value:function(){var e=function(e){var t=[];return function(e,t){for(var n=1;n<e.length;n++){for(var i=e[n],a=n-1;a>=0&&e[a]>i;)t.push([a+1,a,!0]),t.push([a+1,a,!0]),t.push([a+1,e[a],!1]),e[a+1]=e[a],a--;t.push([a+1,n,!0]),t.push([a+1,n,!0]),t.push([a+1,i,!1]),e[a+1]=i}}(e,t),t}(this.state.arr);this.sort(e,3)}},{key:"selectionSort",value:function(){var e=K(this.state.arr);this.sort(e,2)}},{key:"mergeSort",value:function(){var e=R(this.state.arr);this.sort(e,3)}},{key:"quickSort",value:function(){var e=F(this.state.arr);this.sort(e,2)}},{key:"heapSort",value:function(){var e=_(this.state.arr);this.sort(e,3)}},{key:"sort",value:function(e,t){var n=this,i=e.length*this.state.sortingSpeed;this.enableSettings(i);for(var a=0;a<e.length;a++){var s=document.getElementsByClassName("array-bar");if(void 0!==s)e[a][2]?function(){var i=Object(B.a)(e[a],2),r=i[0],o=i[1],l=s[r],c=s[o],d=a%t===0?"#33435d":Y,u=setTimeout((function(){void 0===l&&void 0===c||(l.style.backgroundColor=d,c.style.backgroundColor=d)}),a*n.state.sortingSpeed);void 0!==l&&void 0!==c||clearTimeout(u)}():function(){var t=Object(B.a)(e[a],2),i=t[0],r=t[1],o=s[i],l=setTimeout((function(){void 0!==o&&(o.style.height=r+"px")}),a*n.state.sortingSpeed);void 0===o&&clearTimeout(l)}()}}},{key:"runSortingAlgorithm",value:function(){var e=this;this.setState({optionsDisabled:!0},(function(){switch(e.state.sortingAlgorithm){case"Bubble Sort":e.bubbleSort();break;case"Insertion Sort":e.insertionSort();break;case"Selection Sort":e.selectionSort();break;case"Merge Sort":e.mergeSort();break;case"Quick Sort":e.quickSort();break;case"Heap Sort":e.heapSort()}}));for(var t=document.getElementsByClassName("sidebar-button"),n=0;n<t.length;n++){var i=t[n];i.style.color="#f5a0a0",i.style.cursor="revert"}this.setState((function(e){return{sliderStyle:{"& .MuiSlider-thumb":{bgcolor:"#f5a0a0",":hover":{boxShadow:0}}}}}))}},{key:"enableSettings",value:function(e){var t=this;setTimeout((function(){t.setState({optionsDisabled:!1,sliderStyle:{color:"#33435d",":hover":{boxShadow:0},"& .MuiSlider-thumb":{bgcolor:"#85a4d9",":hover":{boxShadow:0}},"& .MuiSlider-valueLabel":{display:"none"}}});for(var e=document.getElementsByClassName("sidebar-button"),n=0;n<e.length;n++){var i=e[n];i.style.color="#fff",i.style.cursor="pointer"}}),e)}},{key:"render",value:function(){var e=this,t=this.state.arr.map((function(e,t){return Object(b.jsx)("div",{className:"array-bar",style:{backgroundColor:Y,height:e+"px"}},t)}));return Object(b.jsxs)("main",{className:"main-sidebar",children:[Object(b.jsx)("div",{className:"sidebar",children:Object(b.jsxs)("div",{className:"sidebar-settings",children:[Object(b.jsxs)("div",{className:"sidebar-setting",children:[Object(b.jsx)("p",{children:" Control number of bars "}),Object(b.jsxs)("p",{children:[" ",this.state.numberOfBars," bars "]}),Object(b.jsx)(Q.a,{sx:this.state.sliderStyle,disabled:this.state.optionsDisabled,min:10,onChange:this.numberOfBars,max:250,defaultValue:100,valueLabelDisplay:"auto"})]}),Object(b.jsxs)("div",{className:"sidebar-setting",children:[Object(b.jsx)("p",{children:" Control visualizer speed "}),Object(b.jsxs)("p",{children:[" ",this.state.sortingSpeed," ms "]}),Object(b.jsx)(Q.a,{sx:this.state.sliderStyle,disabled:this.state.optionsDisabled,min:1,onChange:this.sliderSpeed,max:100,defaultValue:1,valueLabelDisplay:"auto"})]}),Object(b.jsxs)("div",{className:"sidebar-setting",children:[Object(b.jsx)("p",{children:" Choose an algorithm "}),Object(b.jsxs)("div",{className:"selection-dropdown",onClick:this.showSortingAlgorithms,children:[Object(b.jsx)("div",{className:"current-option",children:Object(b.jsxs)("p",{children:[" ",this.state.sortingAlgorithm," "]})}),Object(b.jsx)("div",{className:"caret-down",children:Object(b.jsx)("i",{className:"fas fa-caret-down",ref:this.dropdownCaret,children:" "})})]}),Object(b.jsx)("div",{className:"selection-options",ref:this.dropdownSelection,children:Object(b.jsx)("ul",{children:X.map((function(t){return Object(b.jsxs)("div",{onClick:function(){return e.changeAlgorithm(t)},children:[" ",t," "]},t)}))})}),Object(b.jsx)("button",{disabled:this.state.optionsDisabled,className:"sidebar-button",onClick:this.runSortingAlgorithm,onMouseEnter:this.buttonEnter,onMouseLeave:this.buttonLeave,ref:this.runButton,children:" Run"})]}),Object(b.jsxs)("div",{className:"sidebar-setting",children:[Object(b.jsx)("p",{children:" Reset the array "}),Object(b.jsx)("button",{disabled:this.state.optionsDisabled,className:"sidebar-button",onClick:this.resetArray,onMouseEnter:this.buttonEnter,onMouseLeave:this.buttonLeave,ref:this.resetButton,children:" Reset"})]})]})}),Object(b.jsx)("div",{id:"bars-wrapper",children:Object(b.jsx)("div",{id:"bars",children:t})})]})}}]),n}(a.a.Component);var ee=function(e){Object(c.a)(n,e);var t=Object(d.a)(n);function n(e){return Object(o.a)(this,n),t.call(this,e)}return Object(l.a)(n,[{key:"render",value:function(){return Object(b.jsx)(h.a,{children:Object(b.jsxs)("div",{id:"app-wrapper",children:[Object(b.jsx)(p,{}),Object(b.jsxs)(g.c,{children:[Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual",children:Object(b.jsx)(j,{})}),Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/sorting",children:Object(b.jsx)(Z,{})}),Object(b.jsx)(g.a,{exact:!0,path:"/AlgoVisual/pathfinding"}),Object(b.jsx)(g.a,{path:"/AlgoVisual/documentation",children:Object(b.jsx)(V,{})}),Object(b.jsx)(g.a,{path:"/AlgoVisual/about"})]}),Object(b.jsx)(m,{})]})})}}]),n}(a.a.Component),te=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,406)).then((function(t){var n=t.getCLS,i=t.getFID,a=t.getFCP,s=t.getLCP,r=t.getTTFB;n(e),i(e),a(e),s(e),r(e)}))};r.a.render(Object(b.jsx)(a.a.StrictMode,{children:Object(b.jsx)(ee,{})}),document.getElementById("root")),te()}},[[388,1,2]]]);
//# sourceMappingURL=main.4756a2a1.chunk.js.map