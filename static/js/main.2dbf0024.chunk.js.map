{"version":3,"sources":["AlgoVisual/Layout/Header/Header.tsx","AlgoVisual/Layout/Footer/Footer.tsx","AlgoVisual/Layout/Main/Home/Home.tsx","AlgoVisual/Layout/Main/Documentation/Sections/Introduction/Introduction.tsx","AlgoVisual/Layout/Main/Documentation/Sections/Markdown/Markdown.ts","AlgoVisual/Layout/Main/Documentation/Sections/DataStructures/DataStructures.tsx","AlgoVisual/Layout/Main/Documentation/Sections/Sorting/Sorting.tsx","AlgoVisual/Layout/Main/Documentation/Sections/Pathfinding/Pathfinding.tsx","AlgoVisual/Layout/Main/Documentation/Sections/DataStructures/Sections/ArrayList/ArrayListDocumentation.tsx","AlgoVisual/Layout/Main/Documentation/Sections/DataStructures/Sections/LinkedList/LinkedListDocumentation.tsx","AlgoVisual/Layout/Main/Documentation/Layout/Documentation.tsx","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/BubbleSort.ts","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/MergeSort.ts","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/QuickSort.ts","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/HeapSort.ts","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/SelectionSort.ts","AlgoVisual/Layout/Main/SortingVisualizer/SortingVisualizer.tsx","AlgoVisual/Layout/Main/SortingVisualizer/Algorithms/InsertionSort.ts","AlgoVisual/App.tsx","Misc/reportWebVitals.ts","index.tsx"],"names":["Header","props","dropdownMenu","createRef","dropdownCaret","state","showAlgosMenu","bind","closeAlgosMenu","displayAlgosMenu","e","this","setState","stopPropagation","document","addEventListener","removeEventListener","current","style","display","transform","transition","id","to","className","onClick","ref","React","Component","Footer","href","target","Home","Introduction","section","borderLeft","backgroundColor","children","remarkPlugins","remarkGfm","remarkBreaks","components","a","code","inline","match","exec","String","replace","customStyle","padding","themeStyle","showLineNumbers","language","PreTag","DataStructures","Sorting","Pathfinding","ArrayListDocumentation","Documentation","gettingStartedSection","dataStructuresSection","sortingSection","pathfindingSection","exact","path","LinkedListDocumentation","getBubbleSortAnimations","arr","animations","i","length","count","j","push","swap","bubbleSort","temp","getMergeSortAnimations","array","auxiliaryArray","slice","mergeSort","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","merge","getQuickSortAnimations","quickSort","l","h","pivot","min","max","random","partition","getHeapSortAnimations","n","sink","heapSort","less","getSelectionSortAnimations","minIndex","selectionSort","PRIMARY_COLOR","options","SortingVisualizer","dropdownSelection","runButton","resetButton","timer","numberOfBars","sortingSpeed","sortingAlgorithm","showSortingOptions","optionsDisabled","animationLength","sliderStyle","color","boxShadow","bgcolor","keepTimeout","resetArray","changeWidthBasedOnSize","sliderSpeed","runSortingAlgorithm","buttonEnter","buttonLeave","showSortingAlgorithms","closeSortingAlgorithms","displaySortingAlgorithms","changeAlgorithm","window","maxBarHeight","getElementById","clientHeight","changeBarsWidth","width","arrayBars","getElementsByClassName","value","currentTarget","option","sort","key","insertionSort","getInsertionSortAnimations","modulus","enableSettings","undefined","barOneIdx","barTwoIdx","barOne","barTwo","t","setTimeout","clearTimeout","newHeight","height","buttons","button","cursor","bars","map","idx","Slider","sx","disabled","onChange","defaultValue","valueLabelDisplay","onMouseEnter","onMouseLeave","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2dbf0024.chunk.js","sourcesContent":["import React, {createRef} from \"react\";\nimport \"./Header.css\";\nimport {Link} from \"react-router-dom\"\n\ntype Props = {};\ntype State = {\n    showAlgosMenu: boolean\n};\n\nclass Header extends React.Component<Props, State> {\n    private dropdownMenu = createRef<HTMLDivElement>();\n    private dropdownCaret = createRef<HTMLDivElement>();\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            showAlgosMenu: false\n        }\n\n        // methods\n        this.showAlgosMenu = this.showAlgosMenu.bind(this);\n        this.closeAlgosMenu = this.closeAlgosMenu.bind(this);\n        this.displayAlgosMenu = this.displayAlgosMenu.bind(this);\n    }\n\n    showAlgosMenu(e: React.MouseEvent) {\n        // ensures that you close menu when clicked again\n        if (!this.state.showAlgosMenu){\n            this.setState({showAlgosMenu: true}, () => this.displayAlgosMenu());\n            // not sure why this works but will figure out soon\n            // makes dropdown work magically!\n            e.stopPropagation();\n            document.addEventListener(\"click\", this.closeAlgosMenu);\n        }\n    }\n\n    closeAlgosMenu() {\n        this.setState({showAlgosMenu: false}, () => this.displayAlgosMenu());\n        document.removeEventListener(\"click\", this.closeAlgosMenu)\n    }\n\n    displayAlgosMenu() {\n        if (this.state.showAlgosMenu) {\n            this.dropdownMenu.current!.style.display = \"block\";\n            this.dropdownCaret.current!.style.transform = \"rotate(180deg)\";\n            this.dropdownCaret.current!.style.transition = \"all 300ms linear\";\n        } else {\n            this.dropdownMenu.current!.style.display = \"none\";\n            this.dropdownCaret.current!.style.transform = \"rotate(0deg)\";\n            this.dropdownCaret.current!.style.transition = \"all 300ms linear\";\n        }\n    }\n\n    render() {\n        return (\n            <header id={\"header\"}>\n                <div id={\"logo-wrapper\"}>\n                    <Link to={\"/AlgoVisual\"}>\n                        <p id={\"name\"}> AlgoVisual </p>\n                    </Link>\n                </div>\n\n                <div id={\"nav-wrapper\"}>\n                    <nav id={\"nav-bar\"}>\n                        <ul>\n                            <li>\n                                <div className={\"nav-link\"}>\n                                    <div className={\"nav-option\"} onClick={this.showAlgosMenu}>\n                                        <p className={\"noselect\"}> Algorithms </p>\n                                        <i className=\"fas fa-caret-down\" ref={this.dropdownCaret}> </i>\n                                    </div>\n                                    <div id={\"dropdown\"} ref={this.dropdownMenu}>\n                                        <ul>\n                                            <li>\n                                                <Link to={\"/AlgoVisual/sorting\"} className={\"nav-link\"}>\n                                                    <div className={\"algos-option\"}>\n                                                        <p> Sorting </p>\n                                                    </div>\n                                                </Link>\n                                            </li>\n\n                                            <li>\n                                                <Link to={\"/AlgoVisual/pathfinding\"} className={\"nav-link\"}>\n                                                    <div className={\"algos-option\"}>\n                                                        <p> Pathfinding </p>\n                                                    </div>\n                                                </Link>\n                                            </li>\n\n                                            <li>\n                                                <Link to={\"/AlgoVisual/datastructures\"} className={\"nav-link\"}>\n                                                    <div className={\"algos-option\"}>\n                                                        <p> Data Structures </p>\n                                                    </div>\n                                                </Link>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </div>\n                            </li>\n\n                            <li>\n                                <Link to={\"/AlgoVisual/documentation\"} className={\"nav-link\"}>\n                                    <div className={\"nav-option\"}>\n                                        <p> Documentation </p>\n                                    </div>\n                                </Link>\n                            </li>\n\n                            <li>\n                                <Link to={\"/AlgoVisual/about\"} className={\"nav-link\"}>\n                                    <div className={\"nav-option\"}>\n                                        <p> About </p>\n                                    </div>\n                                </Link>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport \"./Footer.css\";\n\ntype Props = {};\ntype State = {};\nclass Footer extends React.Component<Props, State>{\n    constructor(props:Props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <footer id=\"footer\">\n                <p id={\"footer-header\"}> Connect with me through these platforms </p>\n                <div id=\"contact-wrapper\">\n                    <ul>\n                        <li>\n                            <a href=\"https://github.com/eduardo-vidals\" target={\"_blank\"} className={\"social-link\"}>\n                                <i className={\"fab fa-github\"}> </i>\n                                <span className={\"social-text\"}> GitHub </span>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a href=\"https://www.linkedin.com/in/eduardo-vidals\" target={\"blank\"} className={\"social-link\"}>\n                                <i className={\"fab fa-linkedin-in\"}> </i>\n                                <span className={\"social-text\"}> LinkedIn </span>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a href=\"https://www.instagram.com/eddy_the_professionalpenguin\" target={\"blank\"} className={\"social-link\"}>\n                                <i className={\"fab fa-instagram\"}> </i>\n                                <span className={\"social-text\"}> Instagram </span>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a className={\"social-link\"}>\n                                <i className={\"fab fa-discord\"}> </i>\n                                <span className={\"social-text\"}> Discord </span>\n                            </a>\n                        </li>\n\n                        <li>\n                            <a className={\"social-link\"}>\n                                <i className={\"fas fa-envelope\"}> </i>\n                                <span className={\"social-text\"}> Email </span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React from \"react\";\nimport \"./Home.css\";\nimport {Link} from \"react-router-dom\"\n\ntype Props = {};\ntype State = {};\n\nclass Home extends React.Component<Props, State> {\n    constructor(props:Props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id={\"home-wrapper\"}>\n                <h1 id={\"home-header-text\"}> Visualizing made easy. </h1>\n                <p id={\"home-text\"}>\n                    This is my first big project, please feel free to explore the beautiful visualization\n                    of algorithms and data structures by clicking one of the buttons below.\n                </p>\n\n                <div id={\"buttons-menu\"}>\n                    <Link to={\"/AlgoVisual/sorting\"}>\n                        <div className={\"home-section\"}> Sorting Algorithms </div>\n                    </Link>\n\n                    <Link to={\"/AlgoVisual/pathfinding\"}>\n                        <div className={\"home-section\"}> Pathfinding Algorithms </div>\n                    </Link>\n\n\n                    <Link to={\"/AlgoVisual/datastructures\"}>\n                        <div className={\"home-section\"}> Data Structures </div>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport themeStyle from 'react-syntax-highlighter/dist/esm/styles/prism/nord';\nimport remarkGfm from \"remark-gfm\";\nimport remarkBreaks from \"remark-breaks\";\nimport {introductionMarkdown} from \"../Markdown/Markdown\";\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\ntype State = {};\n\nclass Introduction extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null) {\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"documentation-wrapper\"}>\n                <div className={\"markdown-wrapper\"}>\n                    <div className={\"markdown\"}>\n                        <ReactMarkdown\n                            children={introductionMarkdown}\n                            remarkPlugins={[[remarkGfm], [remarkBreaks]]}\n                            components={{\n                                a: ({...props}) => <a target={\"_blank\"} {...props} />,\n                                code({inline, className, children, ...props}) {\n                                    const match = /language-(\\w+)/.exec(className || \"\");\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, \"\")}\n                                            customStyle={{padding: \"20px 30px 20px 0px\"}}\n                                            style={themeStyle}\n                                            showLineNumbers={true}\n                                            language={match[1]}\n                                            PreTag=\"div\"\n                                        />\n                                    ) : (\n                                        <code className={className} {...props}>\n                                            {children}\n                                        </code>\n                                    );\n                                }\n                            }}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Introduction;","export let introductionMarkdown = `\n# Introduction \nThis part of the page will go over the implementations of the algorithms and data structures that are implemented throughout the site.\n\n- Before starting, this documentation page assumes that you have a good understanding of the Java programming language. \n- An explanation of the data structures and algorithms will be provided in their respective sections. \n \n## Inspiration & Credits\n- This project was largely inspired by Clément Mihailescu's sorting and pathfinding visualizer.\n- The algorithm and data structure implementations are inspired by the Coursera algorithm courses offered by Princeton University under Robert Sedgewick & Kevin Wayne. \n- Thanks to freeCodeCamp for the wonderful projects offered within their course which helped me build a solid foundation of the React framework. \n\n## Respective Links\n- [Clément Mihailescu's Sorting Visualizer](https://github.com/clementmihailescu/Sorting-Visualizer)\n- [Clément Mihailescu's Pathfinding Visualizer](https://github.com/clementmihailescu/Pathfinding-Visualizer)\n- [Algorithms Part I by Robert Sedgewick & Kevin Wayne](https://www.coursera.org/learn/algorithms-part1)\n- [Algorithms Part II by Robert Sedgewick & Kevin Wayne](https://www.coursera.org/learn/algorithms-part2)\n- [Front End Development Libraries by freeCodeCamp](https://www.freecodecamp.org/learn/front-end-development-libraries)\n`\n\nexport let datastructuresMarkdown = `\n# Data Structures\nThis part of the page will go over many relevant data strucures that are implemented throughout the site. \n`\nexport let arraylistMarkdown = `\n# ArrayList in Java\nThis section will go over a simple implementation of ArrayList.\n\n## Arrays\nAs a reminder, keep in mind that arrays have a limited size in the amount of data they can hold. However, in an ArrayList we are able to manipulate arrays in such a way that allows us to insert and remove elements without having to worry about a limited size. \n\n## ArrayList Implementation\nKeeping the last section in mind, let's initialize our instance variables for our ArrayList. We will be using generics for our implementation to easily apply our ArrayList across all objects. \n\n\\`\\`\\`java\npublic class ArrayList<E> implements Iterable<E> {\n    private static final int INIT_CAPACITY = 8; // initial capacity of array\n    private E[] arr; \n    private int n; // size of array\n    \n    public ArrayList(){\n        arr = (E[]) new Object[INIT_CAPACITY]; // generic array \n        n = 0;\n    }\n}\n\\`\\`\\`\n\nFirst, let's implement the straightforward methods of an ArrayList. \n\n\\`\\`\\`java\npublic boolean isEmpty() {\n    return n == 0;\n}\n\npublic int size() {\n    return n;\n}\n\\`\\`\\`\n\nLet's now implement our first relevant helper method for an ArrayList. We will need a resize method that will use an array with a new capacity and copies all values from the old array into this new array with an updated capacity. \n\n\\`\\`\\`java\nprivate void resize(int capacity) {\n    E[] copy = (E[]) new Object[capacity];\n    for (int i = 0; i < n; i++){\n        copy[i]= arr[i];\n    }\n    arr = copy;\n}\n\\`\\`\\`\n\nWith this helper method, we are now able to implement our add and remove methods. \n\n\\`\\`\\`java\npublic void add(E item){\n    // resize once we reach max capacity\n    if (n == arr.length) {\n        // resizing by 2x ensures we don't resize too frequently and don't allocate too much memory\n        resize(arr.length * 2);\n    }\n    arr[n++] = item;\n}\n\npublic void remove(int index){\n    int numMoved = n - index - i; // numOfNumbers that need to be moved\n    System.arraycopy(arr, index + 1, arr, index, numMoved); // shifts elements to left by 1\n    arr[n--] = null; // decrement size and ensure last arr value is null \n    \n    // resize to ensure you don't allocate too much memory when you have a few amount of elements\n    if (n > 0 && n == arr.length / 4){\n        resize(arr.length / 2);\n    }\n}\n\\`\\`\\`\n## Iterators\nAs a reminder, remember to implement the Iterator interface and implement the following methods: \n- hasNext()\n    - returns true or false depending on whether there is a next element\n- next()\n    - returns the next element in the iterator\n- remove()\n    - allows you to remove elements while traversing\n\nWe will implement an iterator to allow users to remove elements while the list is being traversed. Iterators also allow you to use the for-each syntax for easier traversal. \n\n\\`\\`\\`java\npublic Iterator<E> iterator() {\n    return new ListIterator();\n}\n\nprivate class ListIterator implements Iterator<E> {\n    private int i; // current index\n    \n    @Override\n    public boolean hasNext(){\n        return i < n;\n    }\n    \n    @Override\n    public E next(){\n        if (!hasNext()){\n            throw new UnsupportedOperationException();\n        }\n        return copy[i++];\n    }\n    \n    @Override \n    public void remove() {\n        ArrayList.this.remove(--i);\n    }\n}\n\\`\\`\\`\n\n\n## Visualizer\n...And that's it! Our implementation of ArrayList should be working just fine. Remember, there is also a simple visualization tool of how the array operates in an ArrayList. Click the button below to check out the visualizer!\n`\n\nexport let linkedlistMarkdown = `\n# LinkedList in Java\nThis section will go over a simple implementation of ArrayList.\n\n## Objects & Classes\nThere is sometimes confusion when linked lists are introduced due to not understanding objects and classes. Therefore, it is important that you understand the idea of having a **inner** class within a class. The idea of a linked list is that an inner class can essentially act as a *pointer* that keeps track of **previous** and **next** nodes. This idea is explained in the image below. \n\n## LinkedList Implementation\nKeeping the logic of the last section in mind, we can now initialize the barebones logic of a LinkedList. We will be using generics for our implementation to easily apply our LinkedList across all objects.\n\\`\\`\\`java\npublic class LinkedList<E> implements Iterable<E> {\n\n}\n\\`\\`\\`\n`","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkBreaks from \"remark-breaks\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport themeStyle from \"react-syntax-highlighter/dist/esm/styles/prism/nord\";\nimport {datastructuresMarkdown} from \"../Markdown/Markdown\";\nimport {Link} from \"react-router-dom\";\nimport \"./DataStructures.css\";\n\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\ntype State = {};\n\nclass DataStructures extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null) {\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"documentation-wrapper\"}>\n                <div className={\"markdown-wrapper\"}>\n                    <div className={\"markdown\"}>\n                        <ReactMarkdown\n                            children={datastructuresMarkdown}\n                            remarkPlugins={[[remarkGfm], [remarkBreaks]]}\n                            components={{\n                                a: ({...props}) => <a target={\"_blank\"} {...props} />,\n                                code({inline, className, children, ...props}) {\n                                    const match = /language-(\\w+)/.exec(className || \"\");\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, \"\")}\n                                            customStyle={{padding: \"20px 30px 20px 0px\"}}\n                                            style={themeStyle}\n                                            showLineNumbers={true}\n                                            language={match[1]}\n                                            PreTag=\"div\"\n                                        />\n                                    ) : (\n                                        <code className={className} {...props}>\n                                            {children}\n                                        </code>\n                                    );\n                                }\n                            }}\n                        />\n\n                        <div className={\"sections-wrapper\"}>\n                            <p className={\"sections-header\"}> Content that will be covered: </p>\n                            <div className={\"sections\"}>\n                                <ul>\n                                    <Link to={\"/AlgoVisual/documentation/data-structures/array-list\"}>\n                                        <li> 1. ArrayList</li>\n                                    </Link>\n                                    <hr className={\"section-break\"}/>\n\n                                    <Link to={\"/AlgoVisual/documentation/data-structures/linked-list\"}>\n                                        <li> 2. LinkedList</li>\n                                    </Link>\n                                    <hr className={\"section-break\"}/>\n\n                                    <Link to={\"/AlgoVisual/documentation/data-structures/heaps\"}>\n                                        <li> 3. Heaps</li>\n                                    </Link>\n                                    <hr className={\"section-break\"}/>\n\n                                    <Link to={\"/AlgoVisual/documentation/data-structures/binary-search-trees\"}>\n                                        <li> 4. Binary Search Trees</li>\n                                    </Link>\n                                    <hr className={\"section-break\"}/>\n\n                                    <Link to={\"/AlgoVisual/documentation/data-structures/analysis-of-data-structures\"}>\n                                        <li> 5. Analysis of Data Structures </li>\n                                    </Link>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DataStructures;","import React from \"react\";\nimport \"./Sorting.css\";\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\ntype State = {};\n\nclass Sorting extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null){\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default Sorting;","import React from \"react\";\nimport \"./Pathfinding.css\";\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\ntype State = {};\n\nclass Pathfinding extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null){\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default Pathfinding;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {arraylistMarkdown} from \"../../../Markdown/Markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkBreaks from \"remark-breaks\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport themeStyle from \"react-syntax-highlighter/dist/esm/styles/prism/nord\";\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\n\ntype State = {};\nclass ArrayListDocumentation extends React.Component<Props, State>{\n    constructor(props:Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null){\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"documentation-wrapper\"}>\n                <div className={\"markdown-wrapper\"}>\n                    <div className={\"markdown\"}>\n                        <ReactMarkdown\n                            children={arraylistMarkdown}\n                            remarkPlugins={[[remarkGfm], [remarkBreaks]]}\n                            components={{\n                                a: ({...props}) => <a target={\"_blank\"} {...props} />,\n                                code({inline, className, children, ...props}) {\n                                    const match = /language-(\\w+)/.exec(className || \"\");\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, \"\")}\n                                            customStyle={{padding: \"20px 30px 20px 0px\"}}\n                                            style={themeStyle}\n                                            showLineNumbers={true}\n                                            language={match[1]}\n                                            PreTag=\"div\"\n                                        />\n                                    ) : (\n                                        <code className={className} {...props}>\n                                            {children}\n                                        </code>\n                                    );\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ArrayListDocumentation;","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport {linkedlistMarkdown} from \"../../../Markdown/Markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport remarkBreaks from \"remark-breaks\";\nimport {Prism as SyntaxHighlighter} from \"react-syntax-highlighter\";\nimport themeStyle from \"react-syntax-highlighter/dist/esm/styles/prism/nord\";\n\ntype Props = {\n    section: React.RefObject<HTMLDivElement>\n};\n\ntype State = {};\nclass ArrayListDocumentation extends React.Component<Props, State>{\n    constructor(props:Props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.section.current!.style.borderLeft = \"10px white solid\";\n        this.props.section.current!.style.backgroundColor = \"#29354b\";\n    }\n\n    componentWillUnmount() {\n        if (this.props.section.current !== null){\n            this.props.section.current.style.borderLeft = \"none\"\n            this.props.section.current.style.backgroundColor = \"inherit\";\n        }\n    }\n\n    render() {\n        return (\n            <div className={\"documentation-wrapper\"}>\n                <div className={\"markdown-wrapper\"}>\n                    <div className={\"markdown\"}>\n                        <ReactMarkdown\n                            children={linkedlistMarkdown}\n                            remarkPlugins={[[remarkGfm], [remarkBreaks]]}\n                            components={{\n                                a: ({...props}) => <a target={\"_blank\"} {...props} />,\n                                code({inline, className, children, ...props}) {\n                                    const match = /language-(\\w+)/.exec(className || \"\");\n                                    return !inline && match ? (\n                                        <SyntaxHighlighter\n                                            children={String(children).replace(/\\n$/, \"\")}\n                                            customStyle={{padding: \"20px 30px 20px 0px\"}}\n                                            style={themeStyle}\n                                            showLineNumbers={true}\n                                            language={match[1]}\n                                            PreTag=\"div\"\n                                        />\n                                    ) : (\n                                        <code className={className} {...props}>\n                                            {children}\n                                        </code>\n                                    );\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ArrayListDocumentation;","import React, {createRef} from \"react\";\nimport \"./Documentation.css\";\nimport {Link, Route, Switch} from \"react-router-dom\";\nimport GettingStarted from \"../Sections/Introduction/Introduction\";\nimport DataStructures from \"../Sections/DataStructures/DataStructures\";\nimport Sorting from \"../Sections/Sorting/Sorting\";\nimport Pathfinding from \"../Sections/Pathfinding/Pathfinding\";\nimport ArrayListDocumentation from \"../Sections/DataStructures/Sections/ArrayList/ArrayListDocumentation\";\nimport LinkedListDocumentation from \"../Sections/DataStructures/Sections/LinkedList/LinkedListDocumentation\";\n\ntype Props = {};\ntype State = {\n    hover: false,\n};\n\nclass Documentation extends React.Component {\n    private gettingStartedSection = createRef<HTMLDivElement>();\n    private dataStructuresSection = createRef<HTMLDivElement>();\n    private sortingSection = createRef<HTMLDivElement>();\n    private pathfindingSection = createRef<HTMLDivElement>();\n\n    constructor(props: Props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <main className={\"main-sidebar\"}>\n                <div className={\"sidebar\"}>\n                    <div id={\"documentation-section\"}>\n                        <Link to={\"/AlgoVisual/documentation\"} className={\"documentation-link\"}>\n                            <div className={\"section\"} ref={this.gettingStartedSection}>\n                                <p> Introduction </p>\n                            </div>\n                        </Link>\n\n                        <Link to={\"/AlgoVisual/documentation/data-structures\"} className={\"documentation-link\"}>\n                            <div className={\"section\"} ref={this.dataStructuresSection}>\n                                <p> Data Structures </p>\n                            </div>\n                        </Link>\n\n                        <Link to={\"/AlgoVisual/documentation/sorting\"} className={\"documentation-link\"}>\n                            <div className={\"section\"} ref={this.sortingSection}>\n                                <p> Sorting </p>\n                            </div>\n                        </Link>\n\n                        <Link to={\"/AlgoVisual/documentation/pathfinding\"} className={\"documentation-link\"}>\n                            <div className={\"section\"} ref={this.pathfindingSection}>\n                                <p> Pathfinding </p>\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n                <Switch>\n                    // main documentation page\n                    <Route exact path={\"/AlgoVisual/documentation\"}>\n                        <GettingStarted section={this.gettingStartedSection}/>\n                    </Route>\n\n                    // data structures & sections\n                    <Route exact path={\"/AlgoVisual/documentation/data-structures\"}>\n                        <DataStructures section={this.dataStructuresSection}/>\n                    </Route>\n\n\n                    <Route exact path={\"/AlgoVisual/documentation/data-structures/array-list\"}>\n                        <ArrayListDocumentation section={this.dataStructuresSection}/>\n                    </Route>\n\n                    <Route exact path={\"/AlgoVisual/documentation/data-structures/linked-list\"}>\n                        <LinkedListDocumentation section={this.dataStructuresSection}/>\n                    </Route>\n\n                    // sorting & sections\n                    <Route exact path={\"/AlgoVisual/documentation/sorting\"}>\n                        <Sorting section={this.sortingSection}/>\n                    </Route>\n\n\n                    // pathfinding & sections\n                    <Route exact path={\"/AlgoVisual/documentation/pathfinding\"}>\n                        <Pathfinding section={this.pathfindingSection}/>\n                    </Route>\n                </Switch>\n            </main>\n        )\n    }\n}\n\nexport default Documentation;","export function getBubbleSortAnimations(arr: number[]) {\n    let animations: [number, number, boolean][] = [];\n    bubbleSort(arr, animations);\n    return animations;\n}\n\nfunction bubbleSort(arr: number[], animations: [number, number, boolean][]) {\n    for (let i = 0; i < arr.length - 1; i++) {\n        let count = 0;\n        for (let j = 0; j < arr.length - 1 - i; j++) {\n            // comparing values\n            animations.push([j, j + 1, true]);\n            animations.push([j, j + 1, true]);\n            if (arr[j] > arr[j + 1]) {\n                animations.push([j, arr[j + 1], false]);\n                animations.push([j + 1, arr[j], false]);\n                swap(arr, j, j + 1);\n            } else {\n                count++;\n            }\n        }\n        if (count === arr.length - 1){\n            break;\n        }\n    }\n}\n\nfunction swap(arr: number[], i: number, j: number) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","export function getMergeSortAnimations(array: number[]) {\n    let animations: [number, number, boolean][] = [];\n    const auxiliaryArray = array.slice();\n    mergeSort(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n}\n\nfunction mergeSort(mainArray: number[], startIdx: number, endIdx: number, auxiliaryArray: number[], animations: [number, number, boolean][]) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSort(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSort(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction merge(mainArray: number[], startIdx: number, middleIdx: number, endIdx: number, auxiliaryArray: number[], animations: [number, number, boolean][]) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([i, j, true]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([i, j, true]);\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n            // We overwrite the value at index k in the original array with the\n            // value at index i in the auxiliary array.\n            animations.push([k, auxiliaryArray[i], false]);\n            mainArray[k++] = auxiliaryArray[i++];\n        } else {\n            // We overwrite the value at index k in the original array with the\n            // value at index j in the auxiliary array.\n            animations.push([k, auxiliaryArray[j], false]);\n            mainArray[k++] = auxiliaryArray[j++];\n        }\n    }\n    while (i <= middleIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([i, i, true]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([i, i, true]);\n        // We overwrite the value at index k in the original array with the\n        // value at index i in the auxiliary array.\n        animations.push([k, auxiliaryArray[i], false]);\n        mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n        // These are the values that we're comparing; we push them once\n        // to change their color.\n        animations.push([j, j, true]);\n        // These are the values that we're comparing; we push them a second\n        // time to revert their color.\n        animations.push([j, j, true]);\n        // We overwrite the value at index k in the original array with the\n        // value at index j in the auxiliary array.\n        animations.push([k, auxiliaryArray[j], false]);\n        mainArray[k++] = auxiliaryArray[j++];\n    }\n}","export function getQuickSortAnimations(arr: number[]) {\n    let animations: [number, number, boolean][] = [];\n    quickSort(arr, 0, arr.length - 1, animations);\n    return animations;\n}\n\nfunction quickSort(arr: number[], l: number, h: number, animations: [number, number, boolean][]) {\n    if (l < h) {\n        let j = partition(arr, l, h, animations);\n        quickSort(arr, l, j, animations);\n        quickSort(arr, j + 1, h, animations);\n    }\n}\n\nfunction partition(arr: number[], l: number, h: number, animations: [number, number, boolean][]) {\n    let pivot = arr[randomIntFromInterval(l, h)];\n    let i = l - 1;\n    let j = h + 1;\n\n    while (true) {\n        do {\n            i++;\n            animations.push([i, i, true]);\n            animations.push([i, i, true]);\n        } while (arr[i] < pivot);\n\n        do {\n            j--;\n            animations.push([j, j, true]);\n            animations.push([j, j, true]);\n        } while (arr[j] > pivot);\n\n        if (i >= j) {\n            return j;\n        }\n\n        animations.push([i, arr[j], false]);\n        animations.push([j, arr[i], false]);\n        swap(arr, i, j);\n    }\n}\n\nfunction swap(arr: number[], i: number, j: number) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}\n\nfunction randomIntFromInterval(min: number, max: number) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","export function getHeapSortAnimations(arr: number[]) {\n    let animations: [number, number, boolean][] = [];\n    heapSort(arr, animations);\n    return animations;\n}\n\nfunction heapSort(arr: number[], animations: [number, number, boolean][]) {\n    let n = arr.length;\n    for (let k = n / 2; k >= 1; k--) {\n        sink(arr, k, n, animations);\n    }\n\n    let k = n;\n    while (k > 1) {\n        swap(arr, 1, k--, animations);\n        sink(arr, 1, k, animations);\n    }\n}\n\n// helper methods\nfunction sink(arr: number[], k: number, n: number, animations: [number, number, boolean][]) {\n    while (2 * k <= n) {\n        let j = 2 * k;\n        if (j < n && less(arr, j, j + 1)) {\n            j++;\n        }\n\n        if (!less(arr, k, j)) {\n            break;\n        }\n        swap(arr, k, j, animations);\n        k = j;\n    }\n}\n\nfunction less(arr: number[], i: number, j: number) {\n    return arr[i - 1] < arr[j - 1];\n}\n\nfunction swap(arr: number[], i: number, j: number, animations: [number, number, boolean][]) {\n    animations.push([i - 1, i - 1, true]);\n    animations.push([i - 1, i - 1, true]);\n    animations.push([i - 1, arr[j - 1], false]);\n    animations.push([j - 1, j - 1, true])\n    animations.push([j - 1, j - 1, true])\n    animations.push([j - 1, arr[i - 1], false]);\n    let temp = arr[i - 1];\n    arr[i - 1] = arr[j - 1];\n    arr[j - 1] = temp;\n}\n","export function getSelectionSortAnimations(arr: number[]) {\n    let animations: [number, number, boolean][] = [];\n    selectionSort(arr, animations);\n    return animations;\n}\n\nfunction selectionSort(arr: number[], animations: [number, number, boolean][]) {\n    for (let i = 0; i < arr.length; i++) {\n        let min = arr[i];\n        let minIndex = i;\n        for (let j = i; j < arr.length; j++) {\n            animations.push([j, j, true]);\n            animations.push([j, j, true]);\n            if (min > arr[j]){\n                min = arr[j];\n                minIndex = j;\n            }\n        }\n        animations.push([i, arr[minIndex], false]);\n        animations.push([minIndex, arr[i], false]);\n        swap(arr, i, minIndex);\n    }\n}\n\nfunction swap(arr: number[], i: number, j: number) {\n    let temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n}","import React, {ChangeEvent, createRef} from \"react\";\nimport \"./SortingVisualizer.css\";\nimport {getInsertionSortAnimations} from \"./Algorithms/InsertionSort\";\nimport {getBubbleSortAnimations} from \"./Algorithms/BubbleSort\";\nimport {getMergeSortAnimations} from \"./Algorithms/MergeSort\";\nimport {getQuickSortAnimations} from \"./Algorithms/QuickSort\";\nimport {getHeapSortAnimations} from \"./Algorithms/HeapSort\";\nimport {getSelectionSortAnimations} from \"./Algorithms/SelectionSort\";\nimport {Slider} from \"@mui/material\";\n\n// This is the main color of the array bars.\nconst PRIMARY_COLOR = '#98d6e8';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = '#33435d';\n\n// sorting algorithms\nconst options = [\"Bubble Sort\", \"Insertion Sort\", \"Selection Sort\", \"Merge Sort\", \"Quick Sort\", \"Heap Sort\"];\n\ntype Props = {};\n\ntype State = {\n    arr: number[],\n    numberOfBars: number,\n    sortingSpeed: number,\n    sortingAlgorithm: string,\n    showSortingOptions: boolean,\n    optionsDisabled: boolean,\n    animationLength: number,\n    sliderStyle: any,\n    keepTimeout: boolean\n}\n\nclass SortingVisualizer extends React.Component<Props, State> {\n    private dropdownSelection = createRef<HTMLDivElement>();\n    private dropdownCaret = createRef<HTMLDivElement>();\n    private runButton = createRef<HTMLButtonElement>();\n    private resetButton = createRef<HTMLButtonElement>();\n    private timer: any;\n\n    constructor(props: Props) {\n        super(props);\n        this.timer = null;\n        this.state = {\n            arr: [],\n            numberOfBars: 100,\n            sortingSpeed: 1,\n            sortingAlgorithm: \"Bubble Sort\",\n            showSortingOptions: false,\n            optionsDisabled: false,\n            animationLength: 0,\n            sliderStyle: {\n                color: \"#33435d\",\n                \":hover\": {\n                    boxShadow: 0\n                },\n\n                '& .MuiSlider-thumb': {\n                    bgcolor: \"#85a4d9\",\n                    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n                        boxShadow: '0',\n                    },\n                },\n                '& .MuiSlider-valueLabel': {\n                    display: \"none\"\n                }\n            } as const,\n            keepTimeout: true\n        };\n        this.resetArray = this.resetArray.bind(this);\n        this.changeWidthBasedOnSize = this.changeWidthBasedOnSize.bind(this);\n        this.numberOfBars = this.numberOfBars.bind(this);\n        this.sliderSpeed = this.sliderSpeed.bind(this);\n        this.runSortingAlgorithm = this.runSortingAlgorithm.bind(this);\n        this.buttonEnter = this.buttonEnter.bind(this);\n        this.buttonLeave = this.buttonLeave.bind(this);\n\n        // methods\n        this.showSortingAlgorithms = this.showSortingAlgorithms.bind(this);\n        this.closeSortingAlgorithms = this.closeSortingAlgorithms.bind(this);\n        this.displaySortingAlgorithms = this.displaySortingAlgorithms.bind(this);\n        this.changeAlgorithm = this.changeAlgorithm.bind(this);\n    }\n\n    componentDidMount() {\n        this.resetArray();\n        window.addEventListener('resize', () => {\n            this.resetArray();\n        }, true);\n    }\n\n    resetArray() {\n        // resize the array based on\n        if (!this.state.optionsDisabled){\n            let screenHeight = document.getElementById(\"app-wrapper\")!.clientHeight;\n            let headerHeight = document.getElementById(\"header\")!.clientHeight;\n            let footerHeight = document.getElementById(\"footer\")!.clientHeight;\n            let containerHeight = screenHeight - headerHeight - footerHeight;\n            let maxBarHeight = containerHeight - 100;\n            const arr = [];\n            for (let i = 0; i < this.state.numberOfBars; i++) {\n                arr.push(randomIntFromInterval(5, maxBarHeight));\n            }\n\n            // use changeBarsWidth here as a callback to ensure the arr is already updated!!\n            this.setState({arr}, () => this.changeWidthBasedOnSize(this.state.arr));\n        }\n    }\n\n    // change width of bars\n    changeWidthBasedOnSize(arr: number[]) {\n        if (arr.length <= 20) {\n            this.changeBarsWidth(60)\n        } else if (arr.length <= 40) {\n            this.changeBarsWidth(35)\n        } else if (arr.length <= 100) {\n            this.changeBarsWidth(10);\n        } else if (arr.length <= 150) {\n            this.changeBarsWidth(8);\n        } else if (arr.length <= 200) {\n            this.changeBarsWidth(5);\n        } else {\n            this.changeBarsWidth(3);\n        }\n    }\n\n    changeBarsWidth(width: number) {\n        let arrayBars = document.getElementsByClassName('array-bar');\n        for (let i = 0; i < arrayBars.length; i++) {\n            let bar = arrayBars[i] as HTMLElement;\n            bar.style.width = width + \"px\";\n        }\n    }\n\n    // displaying the settings\n    numberOfBars(e: Event, value: number | number[]) {\n        this.setState({numberOfBars: value as number}, () => {\n            // this ensures that the slider does not reset the array once the min/max is reached\n            if (this.state.numberOfBars > 10 && this.state.numberOfBars < 250) {\n                this.resetArray()\n            }\n        });\n    }\n\n    sliderSpeed(e: Event, value: number | number[]) {\n        this.setState({sortingSpeed: value as number});\n    }\n\n    // button hover settings\n    buttonEnter(e: React.MouseEvent<HTMLButtonElement>) {\n        if (!this.state.optionsDisabled) {\n            e.currentTarget.style.color = \"#98d6e8\";\n        }\n    }\n\n    buttonLeave(e: React.MouseEvent<HTMLButtonElement>) {\n        if (!this.state.optionsDisabled) {\n            e.currentTarget.style.color = \"#fff\";\n        }\n    }\n\n    // methods for dropdown menu\n    showSortingAlgorithms(e: React.MouseEvent) {\n        // ensures that you close menu when clicked again\n        if (!this.state.showSortingOptions) {\n            this.setState({showSortingOptions: true}, () => this.displaySortingAlgorithms());\n            // not sure why this works but will figure out soon\n            // makes dropdown work magically!\n            e.stopPropagation();\n            document.addEventListener(\"click\", this.closeSortingAlgorithms);\n        }\n    }\n\n    closeSortingAlgorithms() {\n        this.setState({showSortingOptions: false}, () => this.displaySortingAlgorithms());\n        document.removeEventListener(\"click\", this.closeSortingAlgorithms)\n    }\n\n    displaySortingAlgorithms() {\n        if (this.state.showSortingOptions) {\n            this.dropdownSelection.current!.style.display = \"block\";\n            this.dropdownCaret.current!.style.transform = \"rotate(180deg)\";\n            this.dropdownCaret.current!.style.transition = \"all 250ms linear\";\n        } else {\n            this.dropdownSelection.current!.style.display = \"none\";\n            this.dropdownCaret.current!.style.transform = \"rotate(0deg)\";\n            this.dropdownCaret.current!.style.transition = \"all 250ms linear\";\n        }\n    }\n\n    changeAlgorithm(option: string) {\n        this.setState({sortingAlgorithm: option});\n    }\n\n    // sorting algorithms\n    bubbleSort() {\n        let animations = getBubbleSortAnimations(this.state.arr);\n        this.sort(animations, 2);\n    }\n\n    insertionSort() {\n        let animations = getInsertionSortAnimations(this.state.arr);\n        this.sort(animations, 3);\n    }\n\n    selectionSort() {\n        let animations = getSelectionSortAnimations(this.state.arr);\n        this.sort(animations, 2);\n    }\n\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.arr);\n        this.sort(animations, 3);\n    }\n\n    quickSort() {\n        let animations = getQuickSortAnimations(this.state.arr);\n        this.sort(animations, 2);\n    }\n\n    heapSort() {\n        let animations = getHeapSortAnimations(this.state.arr);\n        this.sort(animations, 3);\n    }\n\n    // sorting helper method\n    sort(animations: [number, number, boolean][], modulus: number) {\n        let animationLength = animations.length * this.state.sortingSpeed;\n        this.enableSettings(animationLength);\n        for (let i = 0; i < animations.length; i++) {\n            let arrayBars = document.getElementsByClassName('array-bar');\n            if (arrayBars !== undefined) {\n                let isColorChange = animations[i][2];\n                if (isColorChange) {\n                    let [barOneIdx, barTwoIdx] = animations[i];\n                    let barOne = arrayBars[barOneIdx] as HTMLElement;\n                    let barTwo = arrayBars[barTwoIdx] as HTMLElement;\n                    let color = i % modulus === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\n                    // keep track of timer to cancel timer operations once the component is unmounted\n                    let t = setTimeout(() => {\n                        if (barOne !== undefined || barTwo !== undefined) {\n                            barOne.style.backgroundColor = color;\n                            barTwo.style.backgroundColor = color;\n                        }\n                    }, i * this.state.sortingSpeed);\n                    // clear timeout if bars are undefined (component is unmounted)\n                    if (barOne === undefined || barTwo === undefined){\n                        clearTimeout(t);\n                    }\n                } else {\n                    const [barOneIdx, newHeight] = animations[i];\n                    const barOne = arrayBars[barOneIdx] as HTMLElement;\n                    // keep track of timer to cancel timer operations once the component is unmounted\n                    let t = setTimeout(() => {\n                        if (barOne !== undefined) {\n                            barOne.style.height = newHeight + `px`;\n                        }\n                    }, i * this.state.sortingSpeed);\n                    // clear timeout if bars are undefined (component is unmounted)\n                    if (barOne === undefined){\n                        clearTimeout(t);\n                    }\n                }\n            }\n        }\n    }\n\n    // run the sorting algorithm and disable buttons\n    runSortingAlgorithm() {\n        this.setState({optionsDisabled: true}, () => {\n            switch (this.state.sortingAlgorithm) {\n                case 'Bubble Sort':\n                    this.bubbleSort();\n                    break;\n                case 'Insertion Sort':\n                    this.insertionSort();\n                    break;\n                case 'Selection Sort':\n                    this.selectionSort();\n                    break;\n                case 'Merge Sort':\n                    this.mergeSort();\n                    break;\n                case 'Quick Sort':\n                    this.quickSort();\n                    break;\n                case 'Heap Sort':\n                    this.heapSort();\n                    break;\n            }\n        });\n        const buttons = document.getElementsByClassName('sidebar-button');\n        for (let i = 0; i < buttons.length; i++) {\n            let button = buttons[i] as HTMLButtonElement;\n            button.style.color = \"#f5a0a0\";\n            button.style.cursor = \"revert\";\n        }\n\n        this.setState((state) => ({\n            sliderStyle: {\n                '& .MuiSlider-thumb': {\n                    bgcolor: \"#f5a0a0\",\n                    \":hover\": {\n                        boxShadow: 0\n                    },\n                },\n            } as const\n        }));\n    }\n\n    // enable settings once the the animation is over\n    enableSettings(animationLength: number) {\n        setTimeout(() => {\n            this.setState({\n                optionsDisabled: false,\n                sliderStyle: {\n                    color: \"#33435d\",\n                    \":hover\": {\n                        boxShadow: 0\n                    },\n                    '& .MuiSlider-thumb': {\n                        bgcolor: \"#85a4d9\",\n                        \":hover\": {\n                            boxShadow: 0\n                        },\n                    },\n                    '& .MuiSlider-valueLabel': {\n                        display: \"none\"\n                    }\n                } as const\n            });\n\n            const buttons = document.getElementsByClassName('sidebar-button');\n            for (let i = 0; i < buttons.length; i++) {\n                let button = buttons[i] as HTMLButtonElement;\n                button.style.color = \"#fff\";\n                button.style.cursor = \"pointer\";\n            }\n        }, animationLength);\n    }\n\n    render() {\n        const {arr} = this.state;\n        let bars = arr.map((value, idx) => (\n            <div className=\"array-bar\"\n                 key={idx}\n                 style={{backgroundColor: PRIMARY_COLOR, height: value + `px`}}>\n            </div>\n        ))\n\n        return (\n            <main className=\"main-sidebar\">\n                <div className={\"sidebar\"}>\n                    <div className={\"sidebar-settings\"}>\n                        <div className={\"sidebar-setting\"}>\n                            <p> Control number of bars </p>\n                            <p> {this.state.numberOfBars} bars </p>\n                            <Slider sx={this.state.sliderStyle} disabled={this.state.optionsDisabled} min={10}\n                                    onChange={this.numberOfBars} max={250} defaultValue={100} valueLabelDisplay=\"auto\"/>\n                        </div>\n\n                        <div className={\"sidebar-setting\"}>\n                            <p> Control visualizer speed </p>\n                            <p> {this.state.sortingSpeed} ms </p>\n                            <Slider sx={this.state.sliderStyle} disabled={this.state.optionsDisabled} min={1}\n                                    onChange={this.sliderSpeed} max={100} defaultValue={1} valueLabelDisplay=\"auto\"/>\n                        </div>\n\n                        <div className={\"sidebar-setting\"}>\n                            <p> Choose an algorithm </p>\n\n                            <div className={\"selection-dropdown\"} onClick={this.showSortingAlgorithms}>\n                                <div className={\"current-option\"}>\n                                    <p> {this.state.sortingAlgorithm} </p>\n                                </div>\n\n                                <div className={\"caret-down\"}>\n                                    <i className=\"fas fa-caret-down\" ref={this.dropdownCaret}> </i>\n                                </div>\n                            </div>\n                            <div className={\"selection-options\"} ref={this.dropdownSelection}>\n                                <ul>\n                                    {\n                                        options.map(option => (\n                                            <div onClick={() => this.changeAlgorithm(option)}\n                                                 key={option}> {option} </div>\n                                        ))\n                                    }\n                                </ul>\n                            </div>\n\n                            <button disabled={this.state.optionsDisabled} className={\"sidebar-button\"}\n                                    onClick={this.runSortingAlgorithm}\n                                    onMouseEnter={this.buttonEnter} onMouseLeave={this.buttonLeave}\n                                    ref={this.runButton}> Run\n                            </button>\n                        </div>\n\n                        <div className={\"sidebar-setting\"}>\n                            <p> Reset the array </p>\n                            <button disabled={this.state.optionsDisabled} className={\"sidebar-button\"}\n                                    onClick={this.resetArray}\n                                    onMouseEnter={this.buttonEnter} onMouseLeave={this.buttonLeave}\n                                    ref={this.resetButton}> Reset\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div id={\"bars-wrapper\"}>\n                    <div id={\"bars\"}>\n                        {bars}\n                    </div>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default SortingVisualizer;\n\nfunction randomIntFromInterval(min: number, max: number) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}","export function getInsertionSortAnimations(arr: number[]) {\n    let animations: [number, number, boolean][] = [];\n    insertionSort(arr, animations);\n    return animations;\n}\n\nfunction insertionSort(arr: number[], animations: [number, number, boolean][]) {\n    for (let i = 1; i < arr.length; i++) {\n        let key = arr[i];\n        let j = i - 1;\n        while (j >= 0 && arr[j] > key) {\n            animations.push([j + 1, j, true]);\n            animations.push([j + 1, j, true]);\n            animations.push([j + 1, arr[j], false]);\n            arr[j + 1] = arr[j];\n            j--;\n        }\n        animations.push([j + 1, i, true]);\n        animations.push([j + 1, i, true]);\n        animations.push([j + 1, key, false]);\n        arr[j + 1] = key;\n    }\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./Layout/Header/Header\";\nimport Footer from \"./Layout/Footer/Footer\";\nimport Home from \"./Layout/Main/Home/Home\";\nimport Documentation from \"./Layout/Main/Documentation/Layout/Documentation\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport SortingVisualizer from \"./Layout/Main/SortingVisualizer/SortingVisualizer\";\n\ntype Props = {};\ntype State = {};\n\nclass App extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Router>\n                <div id={\"app-wrapper\"}>\n                    <Header/>\n                    <Switch>\n                        <Route exact path=\"/AlgoVisual\">\n                            <Home/>\n                        </Route>\n\n                        <Route exact path=\"/AlgoVisual/sorting\">\n                            <SortingVisualizer/>\n                        </Route>\n\n                        <Route exact path=\"/AlgoVisual/pathfinding\">\n\n                        </Route>\n\n                        <Route path=\"/AlgoVisual/documentation\">\n                            <Documentation/>\n                        </Route>\n\n                        <Route path=\"/AlgoVisual/about\">\n\n                        </Route>\n                    </Switch>\n                    <Footer/>\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './AlgoVisual/App';\nimport reportWebVitals from './Misc/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}